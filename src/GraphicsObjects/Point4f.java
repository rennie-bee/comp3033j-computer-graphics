package GraphicsObjects;

public class Point4f {

	public float x;
	public float y;
	public float z;
	public float a;
	
	
	// default constructor
	public Point4f() { 
		x = 0.0f;
		y = 0.0f;
		z = 0.0f;
		a = 0.0f;
	}
	
	//initializing constructor
	public Point4f(float x, float y, float z,float a) { 
		this.x = x;
		this.y = y;
		this.z = z;
		this.a = a;
	}
	
	// sometimes for different algorithms we will need to address the point using positions 0 1 2 
	public float getPostion(int postion)
	{
		switch(postion)
		{
		case 0: return x;
		case 1: return y;
		case 2: return z; 
		case 3: return a; 
		default: return Float.NaN;  
		} 
	}
	
	public String toString()
	{
		return ("(" + x +"," + y +"," + z + "," + a +")");
    }
 
	 //implement Point plus a Vector 
	public Point4f PlusVector(Vector4f Additonal) {
		// In x direction, add the vector Additonal coordinate to the point coordinate to get a new point coordinate.
		float newX = this.x + Additonal.x;
		// In y direction, add the vector Additonal coordinate to the point coordinate to get a new point coordinate.
		float newY = this.y + Additonal.y;
		// In z direction, add the vector Additonal coordinate to the point coordinate to get a new point coordinate.
		float newZ = this.z + Additonal.z;
		// In a direction, add the vector Additonal coordinate to the point coordinate to get a new point coordinate.
		float newA = this.a + Additonal.a;
		// Utilize four new coordinates to compose a new point and return it.
		return new Point4f(newX, newY, newZ, newA);
	} 
	
	 //implement Point minus a Vector 
	public Point4f MinusVector(Vector4f Minus) {
		// In x direction, remove the vector Minus coordinate from the point coordinate to get a new point coordinate.
		float newX = this.x - Minus.x;
		// In y direction, remove the vector Minus coordinate from the point coordinate to get a new point coordinate.
		float newY = this.y - Minus.y;
		// In z direction, remove the vector Minus coordinate from the point coordinate to get a new point coordinate.
		float newZ = this.z - Minus.z;
		// In a direction, remove the vector Minus coordinate from the point coordinate to get a new point coordinate.
		float newA = this.a - Minus.a;
		// Utilize four new coordinates to compose a new point and return it.
		return new Point4f(newX, newY, newZ, newA);
	}
	
	
	/// Point - Point
	public Vector4f MinusPoint(Point4f Minus) {
		// In x direction, "this" minus "Minus" to get vector pointing from "Minus" to "this".
		float newX = this.x - Minus.x;
		// In y direction, "this" minus "Minus" to get vector pointing from "Minus" to "this".
		float newY = this.y - Minus.y;
		// In z direction, "this" minus "Minus" to get vector pointing from "Minus" to "this".
		float newZ = this.z - Minus.z;
		// In a direction, "this" minus "Minus" to get vector pointing from "Minus" to "this".
		float newA = this.a - Minus.a;
		// Utilize four new coordinates to compose a new vector and return it.
		return new Vector4f(newX, newY, newZ, newA);
	}
	
	 
	 // Remember point + point  is not defined so we not write a method for it. 
	
	
	 
	  
	
}

/*................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
....................................=?7777+.....................................
.............................,8MMMMMMMMMMMMMMMMM7...............................
...........................$MMMMMMMMMMMMMMMMMMMMMM7.............................
........................IMMMMMMMMMMMMMMMMMMMMMMMMMMMM?..........................
......................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN........................
.....................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$......................
...................ZMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.....................
..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8....................
.................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM...................
................IMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM..................
................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$.................
...............=MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ................
..............:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM................
..............7MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:...............
..............DMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ...............
..............MMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMMM8...............
..............MMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMMMMMMMMMMMN...............
..............NMMMMMMMMMMMMMMMMMMMM MM MMMMMMMMMMMMMMMMMMMMMMMMMO...............
..............$MMMMMMMMMMMMMMMMMM MMMM MMMMMMMMMMMMMMMMMMMMMMMMMI...............
..............+MMMMMMMMMMMMMMMMM          MMMMMMMMMMMMMMMMMMMMMM=...............
...............8MMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMMM................
................MMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM8................
................MMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMN,................
................=MMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMM..................
.................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ..................
..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMD...................
...................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.....................
....................8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM......................
.....................,8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM,.......................
........................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMN?.........................
..........................NMMMMMMMMMMMMMMMMMMMMMMMMMI...........................
.............................$MMMMMMMMMMMMMMMMMMM?..............................
.................................,I$NMMMMMN$?...................................
................................................................................
................................................................................
................................................................................
.......................................................................*/
